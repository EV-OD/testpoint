// Mocks generated by Mockito 5.4.6 from annotations
// in testpoint/test/providers/test_provider_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;

import 'package:firebase_auth/firebase_auth.dart' as _i5;
import 'package:firebase_core/firebase_core.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i9;
import 'package:testpoint/models/group_model.dart' as _i8;
import 'package:testpoint/models/question_model.dart' as _i3;
import 'package:testpoint/models/test_model.dart' as _i2;
import 'package:testpoint/services/test_service.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeTest_0 extends _i1.SmartFake implements _i2.Test {
  _FakeTest_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeQuestion_1 extends _i1.SmartFake implements _i3.Question {
  _FakeQuestion_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeFirebaseApp_2 extends _i1.SmartFake implements _i4.FirebaseApp {
  _FakeFirebaseApp_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeActionCodeInfo_3 extends _i1.SmartFake
    implements _i5.ActionCodeInfo {
  _FakeActionCodeInfo_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUserCredential_4 extends _i1.SmartFake
    implements _i5.UserCredential {
  _FakeUserCredential_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeConfirmationResult_5 extends _i1.SmartFake
    implements _i5.ConfirmationResult {
  _FakeConfirmationResult_5(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUserMetadata_6 extends _i1.SmartFake implements _i5.UserMetadata {
  _FakeUserMetadata_6(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeMultiFactor_7 extends _i1.SmartFake implements _i5.MultiFactor {
  _FakeMultiFactor_7(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeIdTokenResult_8 extends _i1.SmartFake implements _i5.IdTokenResult {
  _FakeIdTokenResult_8(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUser_9 extends _i1.SmartFake implements _i5.User {
  _FakeUser_9(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [TestService].
///
/// See the documentation for Mockito's code generation for more information.
class MockTestService extends _i1.Mock implements _i6.TestService {
  MockTestService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i2.Test> createTest(_i2.Test? test) =>
      (super.noSuchMethod(
            Invocation.method(#createTest, [test]),
            returnValue: _i7.Future<_i2.Test>.value(
              _FakeTest_0(this, Invocation.method(#createTest, [test])),
            ),
          )
          as _i7.Future<_i2.Test>);

  @override
  _i7.Future<_i2.Test> updateTest(_i2.Test? test) =>
      (super.noSuchMethod(
            Invocation.method(#updateTest, [test]),
            returnValue: _i7.Future<_i2.Test>.value(
              _FakeTest_0(this, Invocation.method(#updateTest, [test])),
            ),
          )
          as _i7.Future<_i2.Test>);

  @override
  _i7.Future<void> deleteTest(String? testId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteTest, [testId]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<List<_i2.Test>> getTestsByTeacher(String? teacherId) =>
      (super.noSuchMethod(
            Invocation.method(#getTestsByTeacher, [teacherId]),
            returnValue: _i7.Future<List<_i2.Test>>.value(<_i2.Test>[]),
          )
          as _i7.Future<List<_i2.Test>>);

  @override
  _i7.Future<List<_i2.Test>> getTestsByGroup(String? groupId) =>
      (super.noSuchMethod(
            Invocation.method(#getTestsByGroup, [groupId]),
            returnValue: _i7.Future<List<_i2.Test>>.value(<_i2.Test>[]),
          )
          as _i7.Future<List<_i2.Test>>);

  @override
  _i7.Future<_i2.Test?> getTestById(String? testId) =>
      (super.noSuchMethod(
            Invocation.method(#getTestById, [testId]),
            returnValue: _i7.Future<_i2.Test?>.value(),
          )
          as _i7.Future<_i2.Test?>);

  @override
  _i7.Future<_i3.Question> addQuestion(
    String? testId,
    _i3.Question? question,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#addQuestion, [testId, question]),
            returnValue: _i7.Future<_i3.Question>.value(
              _FakeQuestion_1(
                this,
                Invocation.method(#addQuestion, [testId, question]),
              ),
            ),
          )
          as _i7.Future<_i3.Question>);

  @override
  _i7.Future<void> updateQuestion(String? testId, _i3.Question? question) =>
      (super.noSuchMethod(
            Invocation.method(#updateQuestion, [testId, question]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> deleteQuestion(String? testId, String? questionId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteQuestion, [testId, questionId]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<List<_i3.Question>> getQuestions(String? testId) =>
      (super.noSuchMethod(
            Invocation.method(#getQuestions, [testId]),
            returnValue: _i7.Future<List<_i3.Question>>.value(<_i3.Question>[]),
          )
          as _i7.Future<List<_i3.Question>>);

  @override
  _i7.Future<List<_i8.Group>> getAvailableGroups(String? teacherId) =>
      (super.noSuchMethod(
            Invocation.method(#getAvailableGroups, [teacherId]),
            returnValue: _i7.Future<List<_i8.Group>>.value(<_i8.Group>[]),
          )
          as _i7.Future<List<_i8.Group>>);

  @override
  _i7.Future<bool> validateTestOwnership(String? testId, String? teacherId) =>
      (super.noSuchMethod(
            Invocation.method(#validateTestOwnership, [testId, teacherId]),
            returnValue: _i7.Future<bool>.value(false),
          )
          as _i7.Future<bool>);

  @override
  _i7.Future<bool> canEditTest(String? testId, String? teacherId) =>
      (super.noSuchMethod(
            Invocation.method(#canEditTest, [testId, teacherId]),
            returnValue: _i7.Future<bool>.value(false),
          )
          as _i7.Future<bool>);

  @override
  _i7.Future<bool> canDeleteTest(String? testId, String? teacherId) =>
      (super.noSuchMethod(
            Invocation.method(#canDeleteTest, [testId, teacherId]),
            returnValue: _i7.Future<bool>.value(false),
          )
          as _i7.Future<bool>);

  @override
  bool validateTest(_i2.Test? test) =>
      (super.noSuchMethod(
            Invocation.method(#validateTest, [test]),
            returnValue: false,
          )
          as bool);

  @override
  List<_i3.Question> randomizeQuestions(List<_i3.Question>? questions) =>
      (super.noSuchMethod(
            Invocation.method(#randomizeQuestions, [questions]),
            returnValue: <_i3.Question>[],
          )
          as List<_i3.Question>);

  @override
  bool isTestAvailable(_i2.Test? test) =>
      (super.noSuchMethod(
            Invocation.method(#isTestAvailable, [test]),
            returnValue: false,
          )
          as bool);

  @override
  _i7.Stream<List<_i2.Test>> watchTestsByTeacher(String? teacherId) =>
      (super.noSuchMethod(
            Invocation.method(#watchTestsByTeacher, [teacherId]),
            returnValue: _i7.Stream<List<_i2.Test>>.empty(),
          )
          as _i7.Stream<List<_i2.Test>>);

  @override
  _i7.Stream<List<_i3.Question>> watchQuestions(String? testId) =>
      (super.noSuchMethod(
            Invocation.method(#watchQuestions, [testId]),
            returnValue: _i7.Stream<List<_i3.Question>>.empty(),
          )
          as _i7.Stream<List<_i3.Question>>);

  @override
  _i7.Stream<_i2.Test?> watchTest(String? testId) =>
      (super.noSuchMethod(
            Invocation.method(#watchTest, [testId]),
            returnValue: _i7.Stream<_i2.Test?>.empty(),
          )
          as _i7.Stream<_i2.Test?>);

  @override
  _i7.Future<Map<String, dynamic>> getTestStatistics(String? testId) =>
      (super.noSuchMethod(
            Invocation.method(#getTestStatistics, [testId]),
            returnValue: _i7.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i7.Future<Map<String, dynamic>>);

  @override
  _i7.Future<void> addMultipleQuestions(
    String? testId,
    List<_i3.Question>? questions,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#addMultipleQuestions, [testId, questions]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<_i2.Test> duplicateTest(
    String? testId, {
    String? newName,
    String? newGroupId,
    DateTime? newDateTime,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #duplicateTest,
              [testId],
              {
                #newName: newName,
                #newGroupId: newGroupId,
                #newDateTime: newDateTime,
              },
            ),
            returnValue: _i7.Future<_i2.Test>.value(
              _FakeTest_0(
                this,
                Invocation.method(
                  #duplicateTest,
                  [testId],
                  {
                    #newName: newName,
                    #newGroupId: newGroupId,
                    #newDateTime: newDateTime,
                  },
                ),
              ),
            ),
          )
          as _i7.Future<_i2.Test>);
}

/// A class which mocks [FirebaseAuth].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseAuth extends _i1.Mock implements _i5.FirebaseAuth {
  MockFirebaseAuth() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.FirebaseApp get app =>
      (super.noSuchMethod(
            Invocation.getter(#app),
            returnValue: _FakeFirebaseApp_2(this, Invocation.getter(#app)),
          )
          as _i4.FirebaseApp);

  @override
  set app(_i4.FirebaseApp? _app) => super.noSuchMethod(
    Invocation.setter(#app, _app),
    returnValueForMissingStub: null,
  );

  @override
  set tenantId(String? tenantId) => super.noSuchMethod(
    Invocation.setter(#tenantId, tenantId),
    returnValueForMissingStub: null,
  );

  @override
  set customAuthDomain(String? customAuthDomain) => super.noSuchMethod(
    Invocation.setter(#customAuthDomain, customAuthDomain),
    returnValueForMissingStub: null,
  );

  @override
  Map<dynamic, dynamic> get pluginConstants =>
      (super.noSuchMethod(
            Invocation.getter(#pluginConstants),
            returnValue: <dynamic, dynamic>{},
          )
          as Map<dynamic, dynamic>);

  @override
  _i7.Future<void> useAuthEmulator(
    String? host,
    int? port, {
    bool? automaticHostMapping = true,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #useAuthEmulator,
              [host, port],
              {#automaticHostMapping: automaticHostMapping},
            ),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> applyActionCode(String? code) =>
      (super.noSuchMethod(
            Invocation.method(#applyActionCode, [code]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<_i5.ActionCodeInfo> checkActionCode(String? code) =>
      (super.noSuchMethod(
            Invocation.method(#checkActionCode, [code]),
            returnValue: _i7.Future<_i5.ActionCodeInfo>.value(
              _FakeActionCodeInfo_3(
                this,
                Invocation.method(#checkActionCode, [code]),
              ),
            ),
          )
          as _i7.Future<_i5.ActionCodeInfo>);

  @override
  _i7.Future<void> confirmPasswordReset({
    required String? code,
    required String? newPassword,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#confirmPasswordReset, [], {
              #code: code,
              #newPassword: newPassword,
            }),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<_i5.UserCredential> createUserWithEmailAndPassword({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createUserWithEmailAndPassword, [], {
              #email: email,
              #password: password,
            }),
            returnValue: _i7.Future<_i5.UserCredential>.value(
              _FakeUserCredential_4(
                this,
                Invocation.method(#createUserWithEmailAndPassword, [], {
                  #email: email,
                  #password: password,
                }),
              ),
            ),
          )
          as _i7.Future<_i5.UserCredential>);

  @override
  _i7.Future<List<String>> fetchSignInMethodsForEmail(String? email) =>
      (super.noSuchMethod(
            Invocation.method(#fetchSignInMethodsForEmail, [email]),
            returnValue: _i7.Future<List<String>>.value(<String>[]),
          )
          as _i7.Future<List<String>>);

  @override
  _i7.Future<_i5.UserCredential> getRedirectResult() =>
      (super.noSuchMethod(
            Invocation.method(#getRedirectResult, []),
            returnValue: _i7.Future<_i5.UserCredential>.value(
              _FakeUserCredential_4(
                this,
                Invocation.method(#getRedirectResult, []),
              ),
            ),
          )
          as _i7.Future<_i5.UserCredential>);

  @override
  bool isSignInWithEmailLink(String? emailLink) =>
      (super.noSuchMethod(
            Invocation.method(#isSignInWithEmailLink, [emailLink]),
            returnValue: false,
          )
          as bool);

  @override
  _i7.Stream<_i5.User?> authStateChanges() =>
      (super.noSuchMethod(
            Invocation.method(#authStateChanges, []),
            returnValue: _i7.Stream<_i5.User?>.empty(),
          )
          as _i7.Stream<_i5.User?>);

  @override
  _i7.Stream<_i5.User?> idTokenChanges() =>
      (super.noSuchMethod(
            Invocation.method(#idTokenChanges, []),
            returnValue: _i7.Stream<_i5.User?>.empty(),
          )
          as _i7.Stream<_i5.User?>);

  @override
  _i7.Stream<_i5.User?> userChanges() =>
      (super.noSuchMethod(
            Invocation.method(#userChanges, []),
            returnValue: _i7.Stream<_i5.User?>.empty(),
          )
          as _i7.Stream<_i5.User?>);

  @override
  _i7.Future<void> sendPasswordResetEmail({
    required String? email,
    _i5.ActionCodeSettings? actionCodeSettings,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#sendPasswordResetEmail, [], {
              #email: email,
              #actionCodeSettings: actionCodeSettings,
            }),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> sendSignInLinkToEmail({
    required String? email,
    required _i5.ActionCodeSettings? actionCodeSettings,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#sendSignInLinkToEmail, [], {
              #email: email,
              #actionCodeSettings: actionCodeSettings,
            }),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> setLanguageCode(String? languageCode) =>
      (super.noSuchMethod(
            Invocation.method(#setLanguageCode, [languageCode]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> setSettings({
    bool? appVerificationDisabledForTesting = false,
    String? userAccessGroup,
    String? phoneNumber,
    String? smsCode,
    bool? forceRecaptchaFlow,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#setSettings, [], {
              #appVerificationDisabledForTesting:
                  appVerificationDisabledForTesting,
              #userAccessGroup: userAccessGroup,
              #phoneNumber: phoneNumber,
              #smsCode: smsCode,
              #forceRecaptchaFlow: forceRecaptchaFlow,
            }),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> setPersistence(_i5.Persistence? persistence) =>
      (super.noSuchMethod(
            Invocation.method(#setPersistence, [persistence]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<_i5.UserCredential> signInAnonymously() =>
      (super.noSuchMethod(
            Invocation.method(#signInAnonymously, []),
            returnValue: _i7.Future<_i5.UserCredential>.value(
              _FakeUserCredential_4(
                this,
                Invocation.method(#signInAnonymously, []),
              ),
            ),
          )
          as _i7.Future<_i5.UserCredential>);

  @override
  _i7.Future<_i5.UserCredential> signInWithCredential(
    _i5.AuthCredential? credential,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithCredential, [credential]),
            returnValue: _i7.Future<_i5.UserCredential>.value(
              _FakeUserCredential_4(
                this,
                Invocation.method(#signInWithCredential, [credential]),
              ),
            ),
          )
          as _i7.Future<_i5.UserCredential>);

  @override
  _i7.Future<_i5.UserCredential> signInWithCustomToken(String? token) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithCustomToken, [token]),
            returnValue: _i7.Future<_i5.UserCredential>.value(
              _FakeUserCredential_4(
                this,
                Invocation.method(#signInWithCustomToken, [token]),
              ),
            ),
          )
          as _i7.Future<_i5.UserCredential>);

  @override
  _i7.Future<_i5.UserCredential> signInWithEmailAndPassword({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithEmailAndPassword, [], {
              #email: email,
              #password: password,
            }),
            returnValue: _i7.Future<_i5.UserCredential>.value(
              _FakeUserCredential_4(
                this,
                Invocation.method(#signInWithEmailAndPassword, [], {
                  #email: email,
                  #password: password,
                }),
              ),
            ),
          )
          as _i7.Future<_i5.UserCredential>);

  @override
  _i7.Future<_i5.UserCredential> signInWithEmailLink({
    required String? email,
    required String? emailLink,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithEmailLink, [], {
              #email: email,
              #emailLink: emailLink,
            }),
            returnValue: _i7.Future<_i5.UserCredential>.value(
              _FakeUserCredential_4(
                this,
                Invocation.method(#signInWithEmailLink, [], {
                  #email: email,
                  #emailLink: emailLink,
                }),
              ),
            ),
          )
          as _i7.Future<_i5.UserCredential>);

  @override
  _i7.Future<_i5.UserCredential> signInWithProvider(
    _i5.AuthProvider? provider,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithProvider, [provider]),
            returnValue: _i7.Future<_i5.UserCredential>.value(
              _FakeUserCredential_4(
                this,
                Invocation.method(#signInWithProvider, [provider]),
              ),
            ),
          )
          as _i7.Future<_i5.UserCredential>);

  @override
  _i7.Future<_i5.ConfirmationResult> signInWithPhoneNumber(
    String? phoneNumber, [
    _i5.RecaptchaVerifier? verifier,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithPhoneNumber, [phoneNumber, verifier]),
            returnValue: _i7.Future<_i5.ConfirmationResult>.value(
              _FakeConfirmationResult_5(
                this,
                Invocation.method(#signInWithPhoneNumber, [
                  phoneNumber,
                  verifier,
                ]),
              ),
            ),
          )
          as _i7.Future<_i5.ConfirmationResult>);

  @override
  _i7.Future<_i5.UserCredential> signInWithPopup(_i5.AuthProvider? provider) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithPopup, [provider]),
            returnValue: _i7.Future<_i5.UserCredential>.value(
              _FakeUserCredential_4(
                this,
                Invocation.method(#signInWithPopup, [provider]),
              ),
            ),
          )
          as _i7.Future<_i5.UserCredential>);

  @override
  _i7.Future<void> signInWithRedirect(_i5.AuthProvider? provider) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithRedirect, [provider]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> signOut() =>
      (super.noSuchMethod(
            Invocation.method(#signOut, []),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<String> verifyPasswordResetCode(String? code) =>
      (super.noSuchMethod(
            Invocation.method(#verifyPasswordResetCode, [code]),
            returnValue: _i7.Future<String>.value(
              _i9.dummyValue<String>(
                this,
                Invocation.method(#verifyPasswordResetCode, [code]),
              ),
            ),
          )
          as _i7.Future<String>);

  @override
  _i7.Future<void> verifyPhoneNumber({
    String? phoneNumber,
    _i5.PhoneMultiFactorInfo? multiFactorInfo,
    required _i5.PhoneVerificationCompleted? verificationCompleted,
    required _i5.PhoneVerificationFailed? verificationFailed,
    required _i5.PhoneCodeSent? codeSent,
    required _i5.PhoneCodeAutoRetrievalTimeout? codeAutoRetrievalTimeout,
    String? autoRetrievedSmsCodeForTesting,
    Duration? timeout = const Duration(seconds: 30),
    int? forceResendingToken,
    _i5.MultiFactorSession? multiFactorSession,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#verifyPhoneNumber, [], {
              #phoneNumber: phoneNumber,
              #multiFactorInfo: multiFactorInfo,
              #verificationCompleted: verificationCompleted,
              #verificationFailed: verificationFailed,
              #codeSent: codeSent,
              #codeAutoRetrievalTimeout: codeAutoRetrievalTimeout,
              #autoRetrievedSmsCodeForTesting: autoRetrievedSmsCodeForTesting,
              #timeout: timeout,
              #forceResendingToken: forceResendingToken,
              #multiFactorSession: multiFactorSession,
            }),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> revokeTokenWithAuthorizationCode(
    String? authorizationCode,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#revokeTokenWithAuthorizationCode, [
              authorizationCode,
            ]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> initializeRecaptchaConfig() =>
      (super.noSuchMethod(
            Invocation.method(#initializeRecaptchaConfig, []),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);
}

/// A class which mocks [User].
///
/// See the documentation for Mockito's code generation for more information.
class MockUser extends _i1.Mock implements _i5.User {
  MockUser() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get emailVerified =>
      (super.noSuchMethod(Invocation.getter(#emailVerified), returnValue: false)
          as bool);

  @override
  bool get isAnonymous =>
      (super.noSuchMethod(Invocation.getter(#isAnonymous), returnValue: false)
          as bool);

  @override
  _i5.UserMetadata get metadata =>
      (super.noSuchMethod(
            Invocation.getter(#metadata),
            returnValue: _FakeUserMetadata_6(
              this,
              Invocation.getter(#metadata),
            ),
          )
          as _i5.UserMetadata);

  @override
  List<_i5.UserInfo> get providerData =>
      (super.noSuchMethod(
            Invocation.getter(#providerData),
            returnValue: <_i5.UserInfo>[],
          )
          as List<_i5.UserInfo>);

  @override
  String get uid =>
      (super.noSuchMethod(
            Invocation.getter(#uid),
            returnValue: _i9.dummyValue<String>(this, Invocation.getter(#uid)),
          )
          as String);

  @override
  _i5.MultiFactor get multiFactor =>
      (super.noSuchMethod(
            Invocation.getter(#multiFactor),
            returnValue: _FakeMultiFactor_7(
              this,
              Invocation.getter(#multiFactor),
            ),
          )
          as _i5.MultiFactor);

  @override
  _i7.Future<void> delete() =>
      (super.noSuchMethod(
            Invocation.method(#delete, []),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<String?> getIdToken([bool? forceRefresh = false]) =>
      (super.noSuchMethod(
            Invocation.method(#getIdToken, [forceRefresh]),
            returnValue: _i7.Future<String?>.value(),
          )
          as _i7.Future<String?>);

  @override
  _i7.Future<_i5.IdTokenResult> getIdTokenResult([
    bool? forceRefresh = false,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#getIdTokenResult, [forceRefresh]),
            returnValue: _i7.Future<_i5.IdTokenResult>.value(
              _FakeIdTokenResult_8(
                this,
                Invocation.method(#getIdTokenResult, [forceRefresh]),
              ),
            ),
          )
          as _i7.Future<_i5.IdTokenResult>);

  @override
  _i7.Future<_i5.UserCredential> linkWithCredential(
    _i5.AuthCredential? credential,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#linkWithCredential, [credential]),
            returnValue: _i7.Future<_i5.UserCredential>.value(
              _FakeUserCredential_4(
                this,
                Invocation.method(#linkWithCredential, [credential]),
              ),
            ),
          )
          as _i7.Future<_i5.UserCredential>);

  @override
  _i7.Future<_i5.UserCredential> linkWithProvider(_i5.AuthProvider? provider) =>
      (super.noSuchMethod(
            Invocation.method(#linkWithProvider, [provider]),
            returnValue: _i7.Future<_i5.UserCredential>.value(
              _FakeUserCredential_4(
                this,
                Invocation.method(#linkWithProvider, [provider]),
              ),
            ),
          )
          as _i7.Future<_i5.UserCredential>);

  @override
  _i7.Future<_i5.UserCredential> reauthenticateWithProvider(
    _i5.AuthProvider? provider,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#reauthenticateWithProvider, [provider]),
            returnValue: _i7.Future<_i5.UserCredential>.value(
              _FakeUserCredential_4(
                this,
                Invocation.method(#reauthenticateWithProvider, [provider]),
              ),
            ),
          )
          as _i7.Future<_i5.UserCredential>);

  @override
  _i7.Future<_i5.UserCredential> reauthenticateWithPopup(
    _i5.AuthProvider? provider,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#reauthenticateWithPopup, [provider]),
            returnValue: _i7.Future<_i5.UserCredential>.value(
              _FakeUserCredential_4(
                this,
                Invocation.method(#reauthenticateWithPopup, [provider]),
              ),
            ),
          )
          as _i7.Future<_i5.UserCredential>);

  @override
  _i7.Future<void> reauthenticateWithRedirect(_i5.AuthProvider? provider) =>
      (super.noSuchMethod(
            Invocation.method(#reauthenticateWithRedirect, [provider]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<_i5.UserCredential> linkWithPopup(_i5.AuthProvider? provider) =>
      (super.noSuchMethod(
            Invocation.method(#linkWithPopup, [provider]),
            returnValue: _i7.Future<_i5.UserCredential>.value(
              _FakeUserCredential_4(
                this,
                Invocation.method(#linkWithPopup, [provider]),
              ),
            ),
          )
          as _i7.Future<_i5.UserCredential>);

  @override
  _i7.Future<void> linkWithRedirect(_i5.AuthProvider? provider) =>
      (super.noSuchMethod(
            Invocation.method(#linkWithRedirect, [provider]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<_i5.ConfirmationResult> linkWithPhoneNumber(
    String? phoneNumber, [
    _i5.RecaptchaVerifier? verifier,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#linkWithPhoneNumber, [phoneNumber, verifier]),
            returnValue: _i7.Future<_i5.ConfirmationResult>.value(
              _FakeConfirmationResult_5(
                this,
                Invocation.method(#linkWithPhoneNumber, [
                  phoneNumber,
                  verifier,
                ]),
              ),
            ),
          )
          as _i7.Future<_i5.ConfirmationResult>);

  @override
  _i7.Future<_i5.UserCredential> reauthenticateWithCredential(
    _i5.AuthCredential? credential,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#reauthenticateWithCredential, [credential]),
            returnValue: _i7.Future<_i5.UserCredential>.value(
              _FakeUserCredential_4(
                this,
                Invocation.method(#reauthenticateWithCredential, [credential]),
              ),
            ),
          )
          as _i7.Future<_i5.UserCredential>);

  @override
  _i7.Future<void> reload() =>
      (super.noSuchMethod(
            Invocation.method(#reload, []),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> sendEmailVerification([
    _i5.ActionCodeSettings? actionCodeSettings,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#sendEmailVerification, [actionCodeSettings]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<_i5.User> unlink(String? providerId) =>
      (super.noSuchMethod(
            Invocation.method(#unlink, [providerId]),
            returnValue: _i7.Future<_i5.User>.value(
              _FakeUser_9(this, Invocation.method(#unlink, [providerId])),
            ),
          )
          as _i7.Future<_i5.User>);

  @override
  _i7.Future<void> updateEmail(String? newEmail) =>
      (super.noSuchMethod(
            Invocation.method(#updateEmail, [newEmail]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> updatePassword(String? newPassword) =>
      (super.noSuchMethod(
            Invocation.method(#updatePassword, [newPassword]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> updatePhoneNumber(
    _i5.PhoneAuthCredential? phoneCredential,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updatePhoneNumber, [phoneCredential]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> updateDisplayName(String? displayName) =>
      (super.noSuchMethod(
            Invocation.method(#updateDisplayName, [displayName]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> updatePhotoURL(String? photoURL) =>
      (super.noSuchMethod(
            Invocation.method(#updatePhotoURL, [photoURL]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> updateProfile({String? displayName, String? photoURL}) =>
      (super.noSuchMethod(
            Invocation.method(#updateProfile, [], {
              #displayName: displayName,
              #photoURL: photoURL,
            }),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> verifyBeforeUpdateEmail(
    String? newEmail, [
    _i5.ActionCodeSettings? actionCodeSettings,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#verifyBeforeUpdateEmail, [
              newEmail,
              actionCodeSettings,
            ]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);
}
